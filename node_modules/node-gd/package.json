{
  "name": "node-gd",
  "version": "0.2.3",
  "description": "libgd C++ bindings for Node.js",
  "main": "js/node-gd.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "pretest": "coffee --bare -o js coffee/node-gd.coffee && node-gyp rebuild",
    "test": "mocha --reporter spec --bail --ui bdd --colors --compilers coffee:coffee-script --require coffee-script test/test.coffee",
    "install": "node-gyp rebuild"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikesmullin/node-gd.git"
  },
  "keywords": [
    "libgd",
    "gd",
    "image",
    "png",
    "jpg",
    "gif",
    "graphics",
    "library"
  ],
  "author": {
    "name": "Taegon Kim",
    "email": "gonom9@gmail.com"
  },
  "license": "MIT",
  "contributors": [
    {
      "name": "Dudochkin Victor",
      "email": "blacksmith@gogoo.ru"
    },
    {
      "name": "Andris Reinman",
      "email": "andris@node.ee"
    },
    {
      "name": "Peter Magnusson"
    },
    {
      "name": "Damian Senn",
      "email": "damian.senn@adfinis-sygroup.ch"
    },
    {
      "name": "Farrin Reid"
    },
    {
      "name": "Josh",
      "url": "zer0x304"
    },
    {
      "name": "Mike Smullin",
      "email": "mike@smullindesign.com"
    }
  ],
  "gypfile": true,
  "readmeFilename": "README.md",
  "devDependencies": {
    "mocha": "*",
    "chai": "*"
  },
  "readme": "# node-gd\n\nGD graphic library (libgd) C++ bindings for Node.js.\n\nThis version is the community-maintained [official NodeJS.org node-gd repo](https://npmjs.org/package/node-gd).\n\n## Installation on Debian/Ubuntu\n\n```bash\nsudo apt-get install libgd2-xpm-dev # libgd\nnpm install node-gd\n```\n\n## Installation on Mac OS/X\n\n```bash\nbrew install gd\nnpm install node-gd\n```\n\n## Installation on Windows 7\n\n    please open an issue if you have the answer. i'm sure it works, i just don't have ready the exact commands.\n\n## Usage\n\n```coffeescript\n# Require library\ngd = require 'node-gd'\n\n# Create blank new image in memory\noutput_img = gd.create width, height\n\n# Load existing image file on disk into memory\ngd.openPng \"test.png\", (err, input_img) ->\n  console.log \"width: \", input_img.width\n  console.log \"height: \", input_img.width\n\n# Render input over the top of output\ninput_img.copyResampled output_img, dstX, dstY, srcX, srcY, dstW, dstH, srcW, srcH\n\n# Write image buffer to disk\noutput_img.savePng \"out.png\", 0, (err) ->\n  console.log \"image saved!\"\n```\n\nAs usual, for the latest examples, review the easy-to-follow [./test/test.coffee](https://github.com/mikesmullin/node-gd/blob/master/test/test.coffee).\n\n## Related\n\n* [Original author's repo](https://github.com/taggon/node-gd)\n* [node-canvas](https://github.com/LearnBoost/node-canvas) uses libcairo to emulate browser HTML5 Canvas' image manipulation abilities within Node.js\n* [node-o3-canvas](https://github.com/ajaxorg/node-o3-canvas) uses libcairo to emulate browser HTML5 Canvas' image manipulation abilities within Node.js\n* [node-image](https://github.com/pkrumins/node-image)\n",
  "bugs": {
    "url": "https://github.com/mikesmullin/node-gd/issues"
  },
  "_id": "node-gd@0.2.3",
  "_from": "node-gd@"
}
